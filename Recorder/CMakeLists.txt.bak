cmake_minimum_required(VERSION 3.26)
project(Recorder)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_BUILD_TYPE Release CACHE STRING "Set the build type to Release")

# fmt and spdlog
include("../fmt.cmake")
include("../spdlog.cmake")

# Finding OpenCV
find_package(OpenCV REQUIRED)
message(STATUS "OpenCV Version: ${OpenCV_VERSION}")

# Include directories
include_directories(${OpenCV_INCLUDE_DIRS})
include_directories("../SoccerVisualization/src/")

# Find the SoccerVisualization library
#find_library(SOCCER_VISUALIZATION_LIB NAMES SoccerVisualization PATHS "C:/Users/OPENCV/source/repos/SocCam/SoccerCamRecorder/Builds/SoccerVisualization/")
#if(NOT SOCCER_VISUALIZATION_LIB)
#    message(FATAL_ERROR "SoccerVisualization library not found!")
#endif()
set(SOCCER_VISUALIZATION_LIB "C:/Users/OPENCV/source/repos/SocCam/SoccerCamRecorder/Builds/SoccerVisualization/SoccerVisualization.dll")

set(SOURCES
        src/RecorderApplication/RecorderApplication.cpp
        src/RecorderApplication/ExampleLayer.h
        src/RecorderApplication/ExampleLayer.cpp
)

add_executable(Recorder ${SOURCES})

# Link the libraries
target_link_libraries(Recorder PRIVATE
        ${OpenCV_LIBS}
        spdlog::spdlog
        fmt::fmt
        ${SOCCER_VISUALIZATION_LIB} # Link against the SoccerVisualization library
)
